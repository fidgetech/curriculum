"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[57697],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>m});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach(function(t){a(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef(function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),g=a,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))});function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},89491:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(58168),a=(n(96540),n(15680));const i={title:"\u270f\ufe0f 1.2.1.1 Practice: Review of JavaScript Basics",day:"monday",id:"1-2-1-1-practice-review-of-javascript-basics",hide_table_of_contents:!0},o=void 0,l={unversionedId:"introduction-to-programming/javascript-and-web-browsers/1-2-1-1-practice-review-of-javascript-basics",id:"version-1.1/introduction-to-programming/javascript-and-web-browsers/1-2-1-1-practice-review-of-javascript-basics",title:"\u270f\ufe0f 1.2.1.1 Practice: Review of JavaScript Basics",description:"Goal",source:"@site/versioned_docs/version-1.1/1_introduction-to-programming/2_javascript-and-web-browsers/AW-1-2-1-1-practice-review-of-javascript-basics.md",sourceDirName:"1_introduction-to-programming/2_javascript-and-web-browsers",slug:"/introduction-to-programming/javascript-and-web-browsers/1-2-1-1-practice-review-of-javascript-basics",permalink:"/v1.1/introduction-to-programming/javascript-and-web-browsers/1-2-1-1-practice-review-of-javascript-basics",draft:!1,tags:[],version:"1.1",frontMatter:{title:"\u270f\ufe0f 1.2.1.1 Practice: Review of JavaScript Basics",day:"monday",id:"1-2-1-1-practice-review-of-javascript-basics",hide_table_of_contents:!0},sidebar:"introduction-to-programming",previous:{title:"\ud83d\udcd3 1.2.0.22 Review of JavaScript Conventions",permalink:"/v1.1/introduction-to-programming/javascript-and-web-browsers/1-2-0-22-review-of-javascript-conventions"},next:{title:"\ud83d\udcd3 1.2.1.2 Writing Functions",permalink:"/v1.1/introduction-to-programming/javascript-and-web-browsers/1-2-1-2-writing-functions"}},s={},p=[{value:"Code",id:"code",level:2},{value:"Operators",id:"operators",level:3},{value:"String Methods",id:"string-methods",level:3},{value:"JavaScript Conventions",id:"javascript-conventions",level:3},{value:"Data Type Detection and Conversion",id:"data-type-detection-and-conversion",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Goal:")," Discuss and apply these JavaScript concepts with your pair:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Operators"),(0,a.yg)("li",{parentName:"ul"},"Using MDN documentation"),(0,a.yg)("li",{parentName:"ul"},"String methods"),(0,a.yg)("li",{parentName:"ul"},"JavaScript conventions"),(0,a.yg)("li",{parentName:"ul"},"Data type detection and conversion")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Reminder:")," Use the browser DevTools console to try out your JS code! If you need a review, read the instructions on how to use and pair program with the DevTools console ",(0,a.yg)("a",{parentName:"p",href:"../../introduction-to-programming/javascript-and-web-browsers/1-2-0-5-using-the-devtools-console-for-practice-and-pair-programming"},"in this lesson"),"."),(0,a.yg)("h2",{id:"code"},"Code"),(0,a.yg)("hr",null),(0,a.yg)("p",null,"Work through each section of this practice lesson, switching who's driving and who's observing between each prompt."),(0,a.yg)("h3",{id:"operators"},"Operators"),(0,a.yg)("p",null,"Use MDN documentation to learn about the remainder operator ",(0,a.yg)("inlineCode",{parentName:"p"},"%"),', also known as "modulo": '),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Find the reference page for the remainder operator using Google or MDN's search."),(0,a.yg)("li",{parentName:"ul"},"Read the description and examples. "),(0,a.yg)("li",{parentName:"ul"},"Use the built-in console to try out the remainder operator.")),(0,a.yg)("p",null,"Make sure everyone understands what the remainder operator does, then work through these questions:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"What is the ",(0,a.yg)("inlineCode",{parentName:"li"},"%")," operator? How is the action it performs different from simply dividing?"),(0,a.yg)("li",{parentName:"ul"},"Name 3 different types of operators and give an example of each. "),(0,a.yg)("li",{parentName:"ul"},"What does ",(0,a.yg)("inlineCode",{parentName:"li"},"console.log()")," do?"),(0,a.yg)("li",{parentName:"ul"},"What is an operand? (Hint: this is not JavaScript-specific terminology.)")),(0,a.yg)("p",null,"Find the remainder of the following expressions by diving the two operands:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"1008 by 7"),(0,a.yg)("li",{parentName:"ul"},"23423 by 75"),(0,a.yg)("li",{parentName:"ul"},"90 by 3"),(0,a.yg)("li",{parentName:"ul"},"9,870,834,205,987 by 324")),(0,a.yg)("h3",{id:"string-methods"},"String Methods"),(0,a.yg)("p",null,"Find the reference page on MDN for the ",(0,a.yg)("inlineCode",{parentName:"p"},"String.prototype.trim()")," method. Read through the description and examples. Use the built-in console to try out this string method. "),(0,a.yg)("p",null,"Find the reference page on MDN for the ",(0,a.yg)("inlineCode",{parentName:"p"},"String.prototype.replace()")," method. Read through the description and examples. Note \u2014 ignore the references to regex; we'll learn about regex in coming weeks. Use the built-in console to try out this string method."),(0,a.yg)("h3",{id:"javascript-conventions"},"JavaScript Conventions"),(0,a.yg)("p",null,"Answer these questions:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"How are we supposed to name our variables in JavaScript?"),(0,a.yg)("li",{parentName:"ul"},"What is the difference between a JavaScript expression and a JavaScript statement? "),(0,a.yg)("li",{parentName:"ul"},"When should we include semicolons at the end of our lines of code?"),(0,a.yg)("li",{parentName:"ul"},"When should we use ",(0,a.yg)("inlineCode",{parentName:"li"},"let")," and when should we use ",(0,a.yg)("inlineCode",{parentName:"li"},"const")," to declare a variable?")),(0,a.yg)("h3",{id:"data-type-detection-and-conversion"},"Data Type Detection and Conversion"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"What are the two main categories of data types?"),(0,a.yg)("li",{parentName:"ul"},"What is ",(0,a.yg)("inlineCode",{parentName:"li"},"undefined"),"?"),(0,a.yg)("li",{parentName:"ul"},"What data type is ",(0,a.yg)("inlineCode",{parentName:"li"},"NaN"),"? What about ",(0,a.yg)("inlineCode",{parentName:"li"},"Infinity"),"? (Hint: if you are stuck, try detecting the data type.)")),(0,a.yg)("p",null,"Work through these prompts:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Set a variable called ",(0,a.yg)("inlineCode",{parentName:"li"},"favNum")," equal to your favorite number and check the data type."),(0,a.yg)("li",{parentName:"ul"},"Then, create a new variable called ",(0,a.yg)("inlineCode",{parentName:"li"},"stringNum")," converting the previous variable to a string. Check the data type again."),(0,a.yg)("li",{parentName:"ul"},"Next, create a third variable called ",(0,a.yg)("inlineCode",{parentName:"li"},"parsedBackToNum"),", converting this string variable back to a number. Check the data type one more time."),(0,a.yg)("li",{parentName:"ul"},"Compare the first and third variables (",(0,a.yg)("inlineCode",{parentName:"li"},"favNum")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"parsedBackToNum"),") using ",(0,a.yg)("inlineCode",{parentName:"li"},"===")," to confirm that they are equal."),(0,a.yg)("li",{parentName:"ul"},"Compare the first and second variables (",(0,a.yg)("inlineCode",{parentName:"li"},"favNum")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"stringNum"),") or second and third variables (",(0,a.yg)("inlineCode",{parentName:"li"},"stringNum")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"parsedBackToNum"),") to confirm that they are NOT equal.")))}u.isMDXComponent=!0}}]);