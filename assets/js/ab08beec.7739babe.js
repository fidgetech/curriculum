"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[17593],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},39058:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"\ud83d\udcd3 Computer Science Testing Environment Setup",day:"weekend",id:"computer-science-testing-environment-setup",hide_table_of_contents:!0},i=void 0,s={unversionedId:"capstone/capstone-week-1/computer-science-testing-environment-setup",id:"capstone/capstone-week-1/computer-science-testing-environment-setup",title:"\ud83d\udcd3 Computer Science Testing Environment Setup",description:"Many of our computer science lessons involve building small logic-based applications to try out new concepts. These applications will not have a UI. Instead, we will use a test-driven environment with JavaScript to build out these applications.",source:"@site/docs/capstone/1_capstone-week-1/AD-computer-science-testing-environment-setup.md",sourceDirName:"capstone/1_capstone-week-1",slug:"/capstone/capstone-week-1/computer-science-testing-environment-setup",permalink:"/capstone/capstone-week-1/computer-science-testing-environment-setup",draft:!1,tags:[],version:"current",frontMatter:{title:"\ud83d\udcd3 Computer Science Testing Environment Setup",day:"weekend",id:"computer-science-testing-environment-setup",hide_table_of_contents:!0},sidebar:"capstone",previous:{title:"\ud83d\udcd3 Computer Science Section Expectations",permalink:"/capstone/capstone-week-1/computer-science-section-expectations"},next:{title:"\ud83d\udcd3 Recap: Whiteboarding Best Practices (day 3)",permalink:"/capstone/capstone-week-1/recap-whiteboarding-best-practices-day-3"}},c={},p=[],l={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Many of our computer science lessons involve building small logic-based applications to try out new concepts. These applications will not have a UI. Instead, we will use a test-driven environment with JavaScript to build out these applications."),(0,o.kt)("p",null,"We'll use a very basic setup for testing. We recommend creating a repo that uses the basic structure below. Then you can reuse the files in the repo for any computer science lessons that use TDD. This basic testing setup is also very useful for when you want to write, experiment with, and test code on your own."),(0,o.kt)("p",null,"Each TDD project will have the following structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"__tests__\nsrc\n.babelrc\npackage.json\n")),(0,o.kt)("p",null,"We do not need webpack \u2014 we just need enough of an environment to write and run tests."),(0,o.kt)("p",null,"Here's the ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," file:"),(0,o.kt)("div",{class:"filename"},"package.json"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "name-of-project-here",\n  "version": "1.0.0",\n  "description": "Description of project",\n  "scripts": {\n    "test": "jest --coverage"\n  },\n  "devDependencies": {\n    "@babel/core": "^7.6.4",\n    "@babel/plugin-transform-modules-commonjs": "^7.6.0",\n    "jest": "^24.9.0"\n  }\n}\n')),(0,o.kt)("p",null,"As we can see, it's very pared down \u2014 all we need is Jest and Babel. A quick reminder: Babel is necessary for Jest to recognize ES6 import and export statements. Since we only need to test our code and there's no need for a web implementation, we don't need a module bundler like webpack. Obviously, you'll want to update the ",(0,o.kt)("inlineCode",{parentName:"p"},'"name"')," and ",(0,o.kt)("inlineCode",{parentName:"p"},'"description"')," of the project as needed."),(0,o.kt)("p",null,"Don't forget to run ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install")," after adding ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,o.kt)("p",null,"Here's the ",(0,o.kt)("inlineCode",{parentName:"p"},".babelrc")," file:"),(0,o.kt)("div",{class:"filename"},".babelrc"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "env": {\n    "test": {\n      "plugins": ["@babel/plugin-transform-modules-commonjs"]\n    }\n  }\n}\n')),(0,o.kt)("p",null,"This is all we need to get started!"))}m.isMDXComponent=!0}}]);