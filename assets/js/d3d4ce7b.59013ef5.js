"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[55729],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,g=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(g,s(s({ref:t},d),{},{components:n})):r.createElement(g,s({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6611:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={title:"\ud83d\udcd3 1.1.4.3 Classes and Ids",day:"thursday",id:"1-1-4-3-classes-and-ids",hide_table_of_contents:!0},s=void 0,o={unversionedId:"introduction-to-programming/git-html-and-css/1-1-4-3-classes-and-ids",id:"introduction-to-programming/git-html-and-css/1-1-4-3-classes-and-ids",title:"\ud83d\udcd3 1.1.4.3 Classes and Ids",description:"Before we go on let's briefly note the difference between assigning a class to an HTML tag and assigning an id to an HTML tag. For the remainder of this section you can ignore id's and continue using classes, but a brief explanation is in order as you are likely to find references to id's when reading resources online.",source:"@site/docs/1_introduction-to-programming/1_git-html-and-css/BO-1-1-4-3-classes-and-ids.md",sourceDirName:"1_introduction-to-programming/1_git-html-and-css",slug:"/introduction-to-programming/git-html-and-css/1-1-4-3-classes-and-ids",permalink:"/v1.2/introduction-to-programming/git-html-and-css/1-1-4-3-classes-and-ids",draft:!1,tags:[],version:"current",frontMatter:{title:"\ud83d\udcd3 1.1.4.3 Classes and Ids",day:"thursday",id:"1-1-4-3-classes-and-ids",hide_table_of_contents:!0},sidebar:"introduction-to-programming",previous:{title:"\u270f\ufe0f 1.1.4.2 Practice: Cascading",permalink:"/v1.2/introduction-to-programming/git-html-and-css/1-1-4-2-practice-cascading"},next:{title:"\ud83d\udcd3 1.1.4.4 Introduction to Bootstrap",permalink:"/v1.2/introduction-to-programming/git-html-and-css/1-1-4-4-introduction-to-bootstrap"}},l={},c=[],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Before we go on let's briefly note the difference between assigning a ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"class"))," to an HTML tag and assigning an ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"id"))," to an HTML tag. For the remainder of this section you can ignore id's and continue using classes, but a brief explanation is in order as you are likely to find references to id's when reading resources online."),(0,a.kt)("p",null,"Both classes and ids can be targeted by CSS rules (classes with a ",(0,a.kt)("inlineCode",{parentName:"p"},".")," and id's with a ",(0,a.kt)("inlineCode",{parentName:"p"},"#")," symbol). For example, both paragraph tags below are styled the same, though one is referenced by class and the other by id."),(0,a.kt)("div",{class:"filename"},"index.html"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<html lang="en-US">\n<head>\n  <link href="styles.css" rel="stylesheet" type="text/css" media="all">\n  <title>Some Exciting Red Text</title>\n</head>\n<body>\n  <p class="intro">This text will appear red.</p>\n  <p id="line2">This text will also be red. </p>\n</body>\n</html>\n')),(0,a.kt)("div",{class:"filename"},"styles.css"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},".intro {\n  color: red;\n}\n\n#line2 {\n  color: red;\n}\n")),(0,a.kt)("p",null,"The important difference is that ",(0,a.kt)("strong",{parentName:"p"},"ids are unique"),", while ",(0,a.kt)("strong",{parentName:"p"},"classes are not unique"),". We can use the same class on multiple elements, while id's must be unique to a single element on the page. Id's may appear to work even when duplicated on the same page, but duplicate id's will lead to inconsistent behavior and difficult-to-find bugs."),(0,a.kt)("p",null,"If in doubt, use a class."))}u.isMDXComponent=!0}}]);