"use strict";(self.webpackChunklhtp=self.webpackChunklhtp||[]).push([[35213],{15680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>u});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach(function(n){i(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef(function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),d=p(t),c=i,u=d["".concat(l,".").concat(c)]||d[c]||m[c]||r;return t?a.createElement(u,o(o({ref:n},g),{},{components:t})):a.createElement(u,o({ref:n},g))});function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=c;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},89330:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=t(58168),i=(t(96540),t(15680));const r={title:"\ud83d\udcd3 2.2.3.2 Managing Images with webpack",day:"wednesday",id:"2-2-3-2-managing-images-with-webpack",hide_table_of_contents:!0},o=void 0,s={unversionedId:"intermediate-javascript/test-driven-development-and-environments-with-javascript/2-2-3-2-managing-images-with-webpack",id:"version-1.1/intermediate-javascript/test-driven-development-and-environments-with-javascript/2-2-3-2-managing-images-with-webpack",title:"\ud83d\udcd3 2.2.3.2 Managing Images with webpack",description:"The primary focus of this section should be test-driven development, including writing more complex business logic along with tests. However, many students also want to incorporate images into their projects. While this should be a lower priority than using test-driven development (and adding images isn't required for this section's project), you are welcome to experiment with adding images if you have completed other key aspects of your project.",source:"@site/versioned_docs/version-1.1/2_intermediate-javascript/2_test-driven-development-and-environments-with-javascript/BN-2-2-3-2-managing-images-with-webpack.md",sourceDirName:"2_intermediate-javascript/2_test-driven-development-and-environments-with-javascript",slug:"/intermediate-javascript/test-driven-development-and-environments-with-javascript/2-2-3-2-managing-images-with-webpack",permalink:"/v1.1/intermediate-javascript/test-driven-development-and-environments-with-javascript/2-2-3-2-managing-images-with-webpack",draft:!1,tags:[],version:"1.1",frontMatter:{title:"\ud83d\udcd3 2.2.3.2 Managing Images with webpack",day:"wednesday",id:"2-2-3-2-managing-images-with-webpack",hide_table_of_contents:!0},sidebar:"intermediate-javascript",previous:{title:"\u270f\ufe0f 2.2.3.1 Haiku Creator, RPG, Sudoku Solver (Longer Project) - Part 1",permalink:"/v1.1/intermediate-javascript/test-driven-development-and-environments-with-javascript/2-2-3-1-haiku-creator-rpg-sudoku-solver-longer-project---part-1"},next:{title:"\ud83d\udcd3 2.2.3.3 ES6 Array and Object Destructuring",permalink:"/v1.1/intermediate-javascript/test-driven-development-and-environments-with-javascript/2-2-3-3-es6-array-and-object-destructuring"}},l={},p=[{value:"Why webpack for Images?",id:"why-webpack-for-images",level:2},{value:"Configuring webpack for Images",id:"configuring-webpack-for-images",level:2},{value:"Saving Images in a Project",id:"saving-images-in-a-project",level:2},{value:"Rendering webpack-Bundled Images",id:"rendering-webpack-bundled-images",level:2}],g={toc:p},d="wrapper";function m(e){let{components:n,...t}=e;return(0,i.yg)(d,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"The primary focus of this section should be test-driven development, including writing more complex business logic along with tests. However, many students also want to incorporate images into their projects. While this should be a lower priority than using test-driven development (and adding images isn't required for this section's project), you are welcome to experiment with adding images if you have completed other key aspects of your project."),(0,i.yg)("h2",{id:"why-webpack-for-images"},"Why webpack for Images?"),(0,i.yg)("hr",null),(0,i.yg)("p",null,"Now that we are using webpack as a module bundler, all of our source code is being combined in a single ",(0,i.yg)("em",{parentName:"p"},"dist")," folder. For that reason, we need to use webpack to manage images and correctly add them to our ",(0,i.yg)("em",{parentName:"p"},"dist")," directory."),(0,i.yg)("h2",{id:"configuring-webpack-for-images"},"Configuring webpack for Images"),(0,i.yg)("hr",null),(0,i.yg)("p",null,"We'll need to add two packages to manage images with webpack. First, we'll install the ",(0,i.yg)("strong",{parentName:"p"},"file-loader")," package:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"$ npm install file-loader --save-dev\n")),(0,i.yg)("p",null,"Next, we'll install the ",(0,i.yg)("strong",{parentName:"p"},"html-loader")," package:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-shell"},"$ npm install html-loader@1.3.2 --save-dev\n")),(0,i.yg)("p",null,"Finally, we need to configure webpack to use these new tools. We'll create two new entries in the ",(0,i.yg)("inlineCode",{parentName:"p"},"rules")," array within the ",(0,i.yg)("inlineCode",{parentName:"p"},"module")," object of ",(0,i.yg)("inlineCode",{parentName:"p"},"webpack.config.js"),":"),(0,i.yg)("div",{class:"filename"},"webpack.config.js"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"...\n\n{\n  test: /\\.(gif|png|avif|jpe?g)$/,\n  use: [\n    {\n      loader: 'file-loader',\n      options: {\n        name: '[name].[ext]',\n        outputPath: 'assets/images/'\n      }\n    }\n  ]\n},\n{\n  test:/\\.html$/,\n  use: [\n    'html-loader'\n  ]\n},\n\n...\n")),(0,i.yg)("p",null,"Let's walk through this new code:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The first ",(0,i.yg)("inlineCode",{parentName:"p"},"test")," section states which file types this loader will be applied to. We list ",(0,i.yg)("inlineCode",{parentName:"p"},"/\\.(gif|png|avif|jpe?g)$/")," to instruct webpack to handle ",(0,i.yg)("inlineCode",{parentName:"p"},".gif"),", ",(0,i.yg)("inlineCode",{parentName:"p"},".png"),", ",(0,i.yg)("inlineCode",{parentName:"p"},".jpg"),", ",(0,i.yg)("inlineCode",{parentName:"p"},".avif"),", and ",(0,i.yg)("inlineCode",{parentName:"p"},".jpeg")," extensions. If there is another file extension that we want the file loader to handle, we simply need to add it to the list in the webpack configuration.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"use")," specifies ",(0,i.yg)("inlineCode",{parentName:"p"},"file-loader")," as the webpack loader responsible for handling these file types. Because this dependency has more settings than other loaders, we add an ",(0,i.yg)("inlineCode",{parentName:"p"},"options")," object with additional settings in key-value pairs:"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"name")," tells webpack what to name the image file it places in ",(0,i.yg)("em",{parentName:"li"},"dist"),". By stating ",(0,i.yg)("inlineCode",{parentName:"li"},"[name].[ext]"),", we tell it to simply use the file's existing name and extension."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"outputPath")," tells it where in ",(0,i.yg)("em",{parentName:"li"},"dist")," it should place this image."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The second ",(0,i.yg)("inlineCode",{parentName:"p"},"test")," section begins a new rule for  ",(0,i.yg)("inlineCode",{parentName:"p"},".html")," files.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The value corresponding to the ",(0,i.yg)("inlineCode",{parentName:"p"},"use")," key in this rule states ",(0,i.yg)("inlineCode",{parentName:"p"},".html")," file types should have our new ",(0,i.yg)("inlineCode",{parentName:"p"},"html-loader")," applied to them. As stated in this loader's ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/webpack-contrib/html-loader"},"GitHub Documentation"),", this dependency invokes webpack to load the corresponding image resource for any ",(0,i.yg)("inlineCode",{parentName:"p"},"<img>")," tags it spots in our HTML."))),(0,i.yg)("h2",{id:"saving-images-in-a-project"},"Saving Images in a Project"),(0,i.yg)("hr",null),(0,i.yg)("p",null,"We can now begin adding images to our site. There's no strict, universal rule for where to place image files. However, ",(0,i.yg)("strong",{parentName:"p"},"it's common practice to house resources such as images, fonts, and icons in an ",(0,i.yg)("em",{parentName:"strong"},"assets/")," directory that contains corresponding subdirectories for each type of resource"),", such as "),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"assets/images/")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"assets/fonts/")," ")),(0,i.yg)("p",null,"We've configured webpack to use file-loader to output images to ",(0,i.yg)("inlineCode",{parentName:"p"},"dist/assets/images/"),", and we'll go ahead and use this same naming for locating our images in our source code: ",(0,i.yg)("inlineCode",{parentName:"p"},"src/assets/images/"),". Go ahead and create this directory and subdirectory now."),(0,i.yg)("p",null,"Next, we'll add an image. For this example we'll download ",(0,i.yg)("a",{parentName:"p",href:"https://unsplash.com/photos/-Go4DH2pZbc"},"this free stock image of a puppy")," from ",(0,i.yg)("a",{parentName:"p",href:"https://unsplash.com"},"Unsplash.com")," and save it in a file named ",(0,i.yg)("inlineCode",{parentName:"p"},"stock-puppy-photo.jpg")," in our ",(0,i.yg)("inlineCode",{parentName:"p"},"src/assets/images")," directory."),(0,i.yg)("h2",{id:"rendering-webpack-bundled-images"},"Rendering webpack-Bundled Images"),(0,i.yg)("hr",null),(0,i.yg)("p",null,"Now let's add our image to our HTML so we can see it in the browser. We'll add the following ",(0,i.yg)("inlineCode",{parentName:"p"},"<img>")," tag to ",(0,i.yg)("em",{parentName:"p"},"index.html"),":"),(0,i.yg)("div",{class:"filename"},"src/index.html"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-html"},'<html lang="en-US">\n<head>\n</head>\n<body>\n  <div>Hello world!</div>\n  <img src="./assets/images/stock-puppy-photo.jpg" alt="such a pup!">\n</body>\n</html>\n')),(0,i.yg)("p",null,"We link to the location of our new image and add an ",(0,i.yg)("inlineCode",{parentName:"p"},"alt")," property."),(0,i.yg)("p",null,"Let's see our new image in action. Close the project's development server if it's open, and run ",(0,i.yg)("inlineCode",{parentName:"p"},"$ npm run start"),"."))}m.isMDXComponent=!0}}]);